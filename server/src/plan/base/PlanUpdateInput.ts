/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { SubscriptionGroupWhereUniqueInput } from "../../subscriptionGroup/base/SubscriptionGroupWhereUniqueInput";
import { Type } from "class-transformer";
import { SubscriptionUpdateManyWithoutPlansInput } from "./SubscriptionUpdateManyWithoutPlansInput";
import { EnumPlanVisibility } from "./EnumPlanVisibility";
@InputType()
class PlanUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currency?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  duration?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionGroupWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionGroupWhereUniqueInput)
  @IsOptional()
  @Field(() => SubscriptionGroupWhereUniqueInput, {
    nullable: true,
  })
  subscriptionGroup?: SubscriptionGroupWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionUpdateManyWithoutPlansInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionUpdateManyWithoutPlansInput)
  @IsOptional()
  @Field(() => SubscriptionUpdateManyWithoutPlansInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionUpdateManyWithoutPlansInput;

  @ApiProperty({
    required: false,
    enum: EnumPlanVisibility,
  })
  @IsEnum(EnumPlanVisibility)
  @IsOptional()
  @Field(() => EnumPlanVisibility, {
    nullable: true,
  })
  visibility?: "Private" | "Public" | null;
}
export { PlanUpdateInput };
